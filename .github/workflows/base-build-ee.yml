---
## Needed Secrets
## - REGISTRY_USERNAME - User to push as
## - REGISTRY_PASSWORD - Password for user
## Needed Inputs
## - REGISTRY_HOSTNAME - Target to push to
## - REGISTRY_PATH - Optional, if pushing to a path other than root, set to your username probably
## - EE_IMAGE_NAME - Name of the image to build

## Optional Inputs
## - ENABLE_REDHAT_REGISTRY - If you need to login to registry.redhat.io
## - EE_IMAGE_TAG - Tag for the image
## - EE_FOLDER_NAME - Name of the folder where the DE/EE is located
## - EE_FILE_NAME - Name of the Decision/Execution Environment config, defaults to execution-environment.yaml
## Optional Secrets
## - REDHAT_PASSWORD - If using a RHEL supported EE base image
## - REDHAT_USERNAME - If using a RHEL supported EE base image
## - AH_TOKEN - [Not currently supported] If using automation hub collections

name: BASE - Build and Deploy Decision/Execution Environment (reusable)

on:
  # This is a reusable workflow
  workflow_call:
    inputs:
      ENABLE_REDHAT_REGISTRY:
        description: 'Enable Red Hat Registry login'
        default: false
        type: boolean
      REGISTRY_HOSTNAME:
        description: 'Hostname for the target registry, eg quay.io'
        default: 'quay.io'
        type: string
      REGISTRY_PATH:
        description: 'Path to push to in the registry, eg your username'
        default: ''
        type: string
      EE_IMAGE_NAME:
        description: 'Image Name for the DE/EE'
        required: true
        type: string
      EE_IMAGE_TAG:
        description: 'Image tag, must be one tag for image build, defaults to latest'
        default: 'latest'
        type: string
      EE_FOLDER_NAME:
        description: 'name of the folder where the DE/EE is located'
        default: ''
        type: string
      EE_FILE_NAME:
        description: 'name of the Decision/Execution Environment config, defaults to execution-environment.yaml'
        default: 'execution-environment.yml'
        required: false
        type: string

    secrets:
      REGISTRY_USERNAME:
        description: 'Needed for target push registry login'
        required: true
      REGISTRY_PASSWORD:
        description: 'Needed for target push registry login'
        required: true

      REDHAT_PASSWORD:
        description: 'Optional, for RH Registry login'
        required: false
      REDHAT_USERNAME:
        description: 'Optional for RH registry login'
        required: false
      #AH_TOKEN:
      #  description: 'API token for hosted automation hub'
      #  required: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest
    environment: deploy
    steps:

      # In this job, all steps begin with a name
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install python requirements (ansible-builder)
        run: pip install ansible-builder==3.1.0

      - name: Log in to target registry
        id: registry-quay
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ inputs.REGISTRY_HOSTNAME }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Log in to registry.redhat.io
        id: registry-redhat
        if: ${{ inputs.ENABLE_REDHAT_REGISTRY == true }}
        uses: redhat-actions/podman-login@v1
        with:
          registry: registry.redhat.io
          username: ${{ secrets.REDHAT_USERNAME }}
          password: ${{ secrets.REDHAT_PASSWORD }}

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Set short git commit SHA
        id: shortShaVar
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV

      - name: Build image
        id: build-image
        working-directory: ${{ inputs.EE_FOLDER_NAME }}
        run: |
          ansible-builder build \
          --file=${{ inputs.EE_FILE_NAME }} \
          --tag=${{ inputs.EE_IMAGE_NAME }}:${{ inputs.EE_IMAGE_TAG }} \
          --tag=${{ inputs.EE_IMAGE_NAME }}:${{ github.sha }} \
          --tag=${{ inputs.EE_IMAGE_NAME }}:${{ env.COMMIT_SHORT_SHA }} \
          --tag=${{ inputs.EE_IMAGE_NAME }}:${{ steps.date.outputs.date }} \
          -vvv
#         env:
#           ANSIBLE_GALAXY_SERVER_AUTOMATION_HUB_TOKEN: ${{ secrets.AH_TOKEN }}
# Above env var doesn't work yet: https://github.com/ansible/ansible-builder/issues/346

      - name: Push To Target Registry
        id: push-to-registry
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ inputs.EE_IMAGE_NAME }}
          tags: |
            ${{ inputs.EE_IMAGE_TAG }}
            ${{ github.sha }}
            ${{ env.COMMIT_SHORT_SHA }}
            ${{ steps.date.outputs.date }}
          registry: ${{ inputs.REGISTRY_HOSTNAME }}/${{ inputs.REGISTRY_PATH }}/
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }} 

      - name: Print summary
        working-directory: ${{ inputs.EE_FOLDER_NAME }}
        run: |
          echo "## :rocket: Usage" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Image pushed to repository: [${{ steps.push-to-registry.outputs.registry-path }}](https://${{ steps.push-to-registry.outputs.registry-path }})" >> $GITHUB_STEP_SUMMARY
          echo "> \`podman pull ${{ steps.push-to-registry.outputs.registry-path }}\`" >> $GITHUB_STEP_SUMMARY
          echo "> \`podman pull ${{ inputs.REGISTRY_HOSTNAME }}/${{ inputs.REGISTRY_PATH }}/${{ inputs.EE_IMAGE_NAME }}:${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "> \`podman pull ${{ inputs.REGISTRY_HOSTNAME }}/${{ inputs.REGISTRY_PATH }}/${{ inputs.EE_IMAGE_NAME }}:${{ env.COMMIT_SHORT_SHA }}\`" >> $GITHUB_STEP_SUMMARY
          echo "> \`podman pull ${{ inputs.REGISTRY_HOSTNAME }}/${{ inputs.REGISTRY_PATH }}/${{ inputs.EE_IMAGE_NAME }}:${{ steps.date.outputs.date }}\`" >> $GITHUB_STEP_SUMMARY
          echo "## :pushpin: Ansible info:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "`podman run ${{ inputs.EE_IMAGE_NAME }} ansible --version`" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "## :pushpin: Installed collections:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "`podman run ${{ inputs.EE_IMAGE_NAME }} ansible-galaxy collection list`" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
#          echo "## :pushpin: Containerfile:" >> $GITHUB_STEP_SUMMARY
#          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
#          echo "`cat Containerfile`" >> $GITHUB_STEP_SUMMARY
#          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY