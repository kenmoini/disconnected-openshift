---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  annotations:
    tekton.dev/tags: containers
    tekton.dev/source: 'https://github.com/kenmoini/disconnected-openshift'
    tekton.dev/categories: containers
    artifacthub.io/provider: Ken Moini
    tekton.dev/pipelines.minVersion: 0.41.0
    artifacthub.io/category: integration-delivery
    artifacthub.io/recommendations: |
      - url: https://tekton.dev/
    artifacthub.io/maintainers: |
      - name: Ken Moini?
        email: ken@kenmoini.com
  name: ocp-release-tools
  namespace: openshift-pipelines
  labels:
    app.kubernetes.io/version: 0.0.1
    operator.tekton.dev/provider-type: community
spec:
  description: Task that can execute the script needed to mirror OpenShift Releases
  params:
    - name: AUTH_FILE
      default: '/tmp/authfile/auth.json'
      description: Path to authentication file to use for pulling/pushing images
      type: string
    - name: OCP_RELEASE
      default: '4.17.16'
      description: OpenShift Release version to mirror
      type: string
    - name: ARCHITECTURE
      default: 'x86_64'
      description: OpenShift Release architecture to mirror - x86_64, aarch64, s390x, ppc64le
      type: string
    - name: DRY_RUN
      description: Perform a dry run test or not
      default: 'true'
      type: string
    - name: EXTRA_OC_ARGS
      description: Extra prepended arguments to the oc command
      default: ''
      type: string
    - name: MIRROR_METHOD
      default: 'file'
      description: Method to mirror - either direct or file
      type: string
    - name: MIRROR_DIRECTION
      default: 'download'
      description: Direction to mirror when in file mode
      type: string
    - name: LOCAL_REGISTRY
      default: 'quay-quay.quay.svc'
      description: Registry to push to
      type: string
    - name: LOCAL_REGISTRY_PATH_OCP_RELEASE
      default: 'quayadmin/ocp-releases'
      description: Registry path to push to
      type: string
    - name: TARGET_SAVE_PATH
      default: '/tmp/mirror'
      description: Turns on verbose logging, all commands executed will be printed out.
      type: string

    - name: HTTP_PROXY
      default: ''
      description: HTTP proxy server (non-TLS requests).
      type: string
    - name: HTTPS_PROXY
      default: ''
      description: HTTPS proxy server (TLS requests).
      type: string
    - name: NO_PROXY
      default: ''
      description: Opt out of proxying HTTP/HTTPS requests.
      type: string
    - name: TLS_VERIFY
      default: 'true'
      description: Sets the TLS verification flag, `true` is recommended.
      type: string
    - name: VERBOSE
      default: 'false'
      description: Turns on verbose logging, all commands executed will be printed out.
      type: string
  stepTemplate:
    computeResources: {}
    env:
      - name: AUTH_FILE
        value: $(params.AUTH_FILE)
      - name: TARGET_SAVE_PATH
        value: $(params.TARGET_SAVE_PATH)
      - name: OCP_RELEASE
        value: $(params.OCP_RELEASE)
      - name: ARCHITECTURE
        value: $(params.ARCHITECTURE)
      - name: DRY_RUN
        value: $(params.DRY_RUN)
      - name: EXTRA_OC_ARGS
        value: "$(params.EXTRA_OC_ARGS)"
      - name: MIRROR_METHOD
        value: $(params.MIRROR_METHOD)
      - name: MIRROR_DIRECTION
        value: $(params.MIRROR_DIRECTION)
      - name: LOCAL_REGISTRY
        value: $(params.LOCAL_REGISTRY)
      - name: LOCAL_REGISTRY_PATH_OCP_RELEASE
        value: $(params.LOCAL_REGISTRY_PATH_OCP_RELEASE)

      - name: HTTP_PROXY
        value: $(params.HTTP_PROXY)
      - name: HTTPS_PROXY
        value: $(params.HTTPS_PROXY)
      - name: NO_PROXY
        value: $(params.NO_PROXY)
      - name: http_proxy
        value: $(params.HTTP_PROXY)
      - name: https_proxy
        value: $(params.HTTPS_PROXY)
      - name: no_proxy
        value: $(params.NO_PROXY)
      - name: PARAMS_TLS_VERIFY
        value: $(params.TLS_VERIFY)
      - name: PARAMS_VERBOSE
        value: $(params.VERBOSE)

      - name: WORKSPACES_SAVEPATH_BOUND
        value: $(workspaces.savepath.bound)
      - name: WORKSPACES_SAVEPATH_PATH
        value: $(workspaces.savepath.path)
      - name: WORKSPACES_CONTAINERCONFIG_BOUND
        value: $(workspaces.containerconfig.bound)
      - name: WORKSPACES_CONTAINERCONFIG_PATH
        value: $(workspaces.containerconfig.path)
      - name: WORKSPACES_AUTHSECRET_BOUND
        value: $(workspaces.authsecret.bound)
      - name: WORKSPACES_AUTHSECRET_PATH
        value: $(workspaces.authsecret.path)
      - name: WORKSPACES_ROOT_CA_CERTS_BOUND
        value: $(workspaces.root-ca-certs.bound)
      - name: WORKSPACES_ROOT_CA_CERTS_PATH
        value: $(workspaces.root-ca-certs.path)
  steps:
    - computeResources: {}
      #image: 'quay.io/kenmoini/ocp-release-utils:6fc5cf7'
      image: 'image-registry.openshift-image-registry.svc:5000/openshift/ocp-release-tools:latest'
      name: mirror
      script: |
        set -e
        /entrypoint.sh;
      securityContext:
        capabilities:
          add:
            - SETFCAP
      volumeMounts:
        - mountPath: /tmp/mirror
          name: mirror-dir
  volumes:
    - emptyDir: {}
      name: mirror-dir
  workspaces:
    - description: Workspace where you can attach a PVC for larger mirroring sessions.
      mountPath: /mirror
      name: savepath
      optional: true
    - description: An optional workspace that allows providing overrides for how Buildah accesses container registries.
      mountPath: /tmp/containerconfig
      name: containerconfig
      optional: true
    - description: Mount a Secret for Pull/Push Credentials
      mountPath: /tmp/authsecret
      name: authsecret
      optional: true
    - description: An optional workspace to mount CA Root certs from a ConfigMap with the key `ca-bundle.crt`
      mountPath: /etc/pki/tls/certs
      name: root-ca-certs
      optional: true
