---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  annotations:
    tekton.dev/tags: containers
    tekton.dev/source: 'https://github.com/openshift-pipelines/task-containers'
    tekton.dev/categories: containers
    artifacthub.io/provider: Red Hat
    tekton.dev/pipelines.minVersion: 0.41.0
    artifacthub.io/category: integration-delivery
    artifacthub.io/recommendations: |
      - url: https://tekton.dev/
    artifacthub.io/maintainers: |
      - name: Ken Moini?
        email: ken@kenmoini.com
  name: skopeo-copy-disconnected
  namespace: openshift-pipelines
  labels:
    app.kubernetes.io/version: 0.0.1
    operator.tekton.dev/provider-type: community
spec:
  description: |
    Skopeo is a command line tool for working with remote image registries.
    Skopeo doesnâ€™t require a daemon to be running while performing its operations. In particular,
    the handy skopeo command called copy will ease the whole image copy operation. 
    The copy command will take care of copying the image from internal.registry to production.registry.
    If your production registry requires credentials to login in order to push the image, skopeo can handle that as well.
    After copying the source and destination images SHA256 digest is stored as results.
  params:
    - default: ''
      description: |
        Fully qualified source container image name, including tag, to be copied
        into `DESTINATION_IMAGE_URL` param.
      name: SOURCE_IMAGE_URL
      type: string
    - default: ''
      description: |
        Fully qualified destination container image name, including tag.
      name: DESTINATION_IMAGE_URL
      type: string
    - default: 'true'
      description: |
        Sets the TLS verification flags for the source registry, `true` is recommended.
      name: SRC_TLS_VERIFY
      type: string
    - default: 'true'
      description: |
        Sets the TLS verification flags for the destination registry, `true` is recommended.
      name: DEST_TLS_VERIFY
      type: string
    - default: 'false'
      description: |
        Shows a more verbose (debug) output.
      name: VERBOSE
      type: string
    - default: ''
      description: |
        Additional args for skopeo copy command
      name: ARGS
      type: string

    - name: AUTH_FILE
      default: '/tmp/authfile/auth.json'
      description: Path to authentication file to use for pulling/pushing images
      type: string
    - name: HTTP_PROXY
      default: ''
      description: HTTP proxy server (non-TLS requests).
      type: string
    - name: HTTPS_PROXY
      default: ''
      description: HTTPS proxy server (TLS requests).
      type: string
    - name: NO_PROXY
      default: ''
      description: Opt out of proxying HTTP/HTTPS requests.
      type: string
  results:
    - description: |
        Source image SHA256 digest.
      name: SOURCE_DIGEST
      type: string
    - description: |
        Destination image SHA256 digest.
      name: DESTINATION_DIGEST
      type: string
  stepTemplate:
    computeResources: {}
    env:
      - name: PARAMS_SOURCE_IMAGE_URL
        value: $(params.SOURCE_IMAGE_URL)
      - name: PARAMS_DESTINATION_IMAGE_URL
        value: $(params.DESTINATION_IMAGE_URL)
      - name: PARAMS_SRC_TLS_VERIFY
        value: $(params.SRC_TLS_VERIFY)
      - name: PARAMS_DEST_TLS_VERIFY
        value: $(params.DEST_TLS_VERIFY)
      - name: PARAMS_VERBOSE
        value: $(params.VERBOSE)
      - name: PARAMS_ARGS
        value: $(params.ARGS)
      - name: WORKSPACES_IMAGES_URL_BOUND
        value: $(workspaces.images_url.bound)
      - name: WORKSPACES_IMAGES_URL_PATH
        value: $(workspaces.images_url.path)
      - name: RESULTS_SOURCE_DIGEST_PATH
        value: $(results.SOURCE_DIGEST.path)
      - name: RESULTS_DESTINATION_DIGEST_PATH
        value: $(results.DESTINATION_DIGEST.path)

      - name: AUTH_FILE
        value: $(params.AUTH_FILE)
      - name: HTTP_PROXY
        value: $(params.HTTP_PROXY)
      - name: HTTPS_PROXY
        value: $(params.HTTPS_PROXY)
      - name: NO_PROXY
        value: $(params.NO_PROXY)
      - name: http_proxy
        value: $(params.HTTP_PROXY)
      - name: https_proxy
        value: $(params.HTTPS_PROXY)
      - name: no_proxy
        value: $(params.NO_PROXY)

      - name: WORKSPACES_CONTAINERCONFIG_BOUND
        value: $(workspaces.containerconfig.bound)
      - name: WORKSPACES_CONTAINERCONFIG_PATH
        value: $(workspaces.containerconfig.path)
      - name: WORKSPACES_REGISTRIESD_BOUND
        value: $(workspaces.registriesd.bound)
      - name: WORKSPACES_REGISTRIESD_PATH
        value: $(workspaces.registriesd.path)
      - name: WORKSPACES_AUTHSECRET_BOUND
        value: $(workspaces.authsecret.bound)
      - name: WORKSPACES_AUTHSECRET_PATH
        value: $(workspaces.authsecret.path)
      - name: WORKSPACES_ROOT_CA_CERTS_BOUND
        value: $(workspaces.root-ca-certs.bound)
      - name: WORKSPACES_ROOT_CA_CERTS_PATH
        value: $(workspaces.root-ca-certs.path)

  steps:
    - computeResources: {}
      securityContext:
        capabilities:
          add:
            - SETFCAP
      env:
        - name: HOME
          value: /workspace/home
      #image: 'registry.redhat.io/rhel8/skopeo@sha256:7fd65200b4847fc84fba0466519b87f915e28c0e9bc90d3022beecfebffd4af8'
      image: 'quay.io/kenmoini/skopeo-jq:latest'
      name: skopeo-copy-disconnected
      script: |
        set -e
        printf '%s' "IyEvdXNyL2Jpbi9lbnYgYmFzaAoKIyB0ZWt0b24ncyBob21lIGRpcmVjdG9yeQpkZWNsYXJlIC1yeCBURUtUT05fSE9NRT0iJHtURUtUT05fSE9NRTotL3Rla3Rvbi9ob21lfSIKCiMKIyBGdW5jdGlvbnMKIwoKZnVuY3Rpb24gZmFpbCgpIHsKICAgIGVjaG8gIkVSUk9SOiAkeyp9IiAyPiYxCiAgICBleGl0IDEKfQoKZnVuY3Rpb24gcGhhc2UoKSB7CiAgICBlY2hvICItLS0+IFBoYXNlOiAkeyp9Li4uIgp9CgojIGFzc2VydCBsb2NhbCB2YXJpYWJsZXMgYXJlIGV4cG9ydGVkIG9uIHRoZSBlbnZpcm9ubWVudApmdW5jdGlvbiBleHBvcnRlZF9vcl9mYWlsKCkgewogICAgZGVjbGFyZSAtYSBfcmVxdWlyZWRfdmFycz0iJHtAfSIKCiAgICBmb3IgdiBpbiAke19yZXF1aXJlZF92YXJzW0BdfTsgZG8KICAgICAgICBbWyAteiAiJHshdn0iIF1dICYmCiAgICAgICAgICAgIGZhaWwgIicke3Z9JyBlbnZpcm9ubWVudCB2YXJpYWJsZSBpcyBub3Qgc2V0ISIKICAgIGRvbmUKCiAgICByZXR1cm4gMAp9Cg==" |base64 -d >"/scripts/common.sh"
        printf '%s' "IyEvdXNyL2Jpbi9lbnYgYmFzaAoKZGVjbGFyZSAtcnggV09SS1NQQUNFU19DT05UQUlORVJDT05GSUdfUEFUSD0iJHtXT1JLU1BBQ0VTX0NPTlRBSU5FUkNPTkZJR19QQVRIOi19IgpkZWNsYXJlIC1yeCBXT1JLU1BBQ0VTX0NPTlRBSU5FUkNPTkZJR19CT1VORD0iJHtXT1JLU1BBQ0VTX0NPTlRBSU5FUkNPTkZJR19CT1VORDotfSIKCmRlY2xhcmUgLXJ4IFdPUktTUEFDRVNfQVVUSFNFQ1JFVF9QQVRIPSIke1dPUktTUEFDRVNfQVVUSFNFQ1JFVF9QQVRIOi19IgpkZWNsYXJlIC1yeCBXT1JLU1BBQ0VTX0FVVEhTRUNSRVRfQk9VTkQ9IiR7V09SS1NQQUNFU19BVVRIU0VDUkVUX0JPVU5EOi19IgoKbWtkaXIgLXAgJEhPTUUvLmNvbmZpZy9jb250YWluZXJzCm1rZGlyIC1wICRURUtUT05fSE9NRS8uY29uZmlnL2NvbnRhaW5lcnMKCmRlY2xhcmUgLXggTkVFRFNfRk9STUFUVElORz0idHJ1ZSIKZGVjbGFyZSAteCBSRUdJU1RSWV9DT05GPSIiCmRlY2xhcmUgLXggRE9DS0VSX0NPTkZJRz0iIgpkZWNsYXJlIC14IEFVVEhGSUxFX1BBUkFNPSIiCiMgU2V0IGZvciBza29wZW8tY29weS1wcm94eQpkZWNsYXJlIC14IFNLT1BFT19SRUdJU1RSSUVTRF9GTEFHPSIiCmRlY2xhcmUgLXggU0tPUEVPX0FVVEhGSUxFX0ZMQUc9IiIKCmlmIFtbICIke1dPUktTUEFDRVNfQ09OVEFJTkVSQ09ORklHX0JPVU5EfSIgPT0gInRydWUiIF1dOyB0aGVuCiAgICBwaGFzZSAiU2V0dGluZyBjb250YWluZXIgY29uZmlndXJhdGlvbiAuLi4iCgogICAgY3AgLXIgJHtXT1JLU1BBQ0VTX0NPTlRBSU5FUkNPTkZJR19QQVRIfS8qICRIT01FLy5jb25maWcvY29udGFpbmVycy8KICAgIGNwIC1yICR7V09SS1NQQUNFU19DT05UQUlORVJDT05GSUdfUEFUSH0vKiAkVEVLVE9OX0hPTUUvLmNvbmZpZy9jb250YWluZXJzLwogICAgaWYgW1sgLWQgIiR7V09SS1NQQUNFU19DT05UQUlORVJDT05GSUdfUEFUSH0vcmVnaXN0cmllcy5jb25mLmQiIF1dOyB0aGVuCiAgICAgICAgU0tPUEVPX1JFR0lTVFJJRVNEX0ZMQUc9Ii0tcmVnaXN0cmllcy5kICR7V09SS1NQQUNFU19DT05UQUlORVJDT05GSUdfUEFUSH0vcmVnaXN0cmllcy5jb25mLmQiCiAgICBmaQogICAgaWYgW1sgLWYgIiR7V09SS1NQQUNFU19DT05UQUlORVJDT05GSUdfUEFUSH0vcmVnaXN0cmllcy5jb25mIiBdXTsgdGhlbgogICAgICAgIFJFR0lTVFJZX0NPTkY9Ii0tcmVnaXN0cmllcy1jb25mICR7V09SS1NQQUNFU19DT05UQUlORVJDT05GSUdfUEFUSH0vcmVnaXN0cmllcy5jb25mIgogICAgZmkKICAgIGlmIFtbICIke1dPUktTUEFDRVNfUkVHSVNUUklFU0RfQk9VTkR9IiA9PSAidHJ1ZSIgXV07IHRoZW4KICAgICAgICBTS09QRU9fUkVHSVNUUklFU0RfRkxBRz0iLS1yZWdpc3RyaWVzLmQgJHtXT1JLU1BBQ0VTX1JFR0lTVFJJRVNEX1BBVEh9IgogICAgZmkKICAgIERPQ0tFUl9DT05GSUc9IiRIT01FLy5jb25maWcvY29udGFpbmVycy8iCgogICAgcGhhc2UgIlJFR0lTVFJZX0NPTkY6ICcke1JFR0lTVFJZX0NPTkZ9JyIKICAgIHBoYXNlICJTS09QRU9fUkVHSVNUUklFU0RfRkxBRzogJyR7U0tPUEVPX1JFR0lTVFJJRVNEX0ZMQUd9JyIKZmkKCgppZiBbWyAiJHtXT1JLU1BBQ0VTX0FVVEhTRUNSRVRfQk9VTkR9IiA9PSAidHJ1ZSIgXV07IHRoZW4KCiAgICAjIE5vcm1hbCBrdWJlcm5ldGVzLmlvL2RvY2tlcmNvbmZpZ2pzb24gdHlwZSBTZWNyZXQKICAgIGlmIFtbIC1mICR7V09SS1NQQUNFU19BVVRIU0VDUkVUX1BBVEh9Ly5kb2NrZXJjb25maWdqc29uIF1dOyB0aGVuCiAgICAgICAgcGhhc2UgIkRldGVjdGVkIC5kb2NrZXJjb25maWdqc29uIC4uLiIKICAgICAgICAjIFRlc3QgdG8gc2VlIGlmIGl0J3MgYSBwcm9wZXIgYXV0aCBmaWxlCiAgICAgICAgUFVMTF9TRUNSRVRfUEFUSD0iJHtXT1JLU1BBQ0VTX0FVVEhTRUNSRVRfUEFUSH0vLmRvY2tlcmNvbmZpZ2pzb24iCiAgICAgICAgQVVUSF9LRVk9JChjYXQgJHtXT1JLU1BBQ0VTX0FVVEhTRUNSRVRfUEFUSH0vLmRvY2tlcmNvbmZpZ2pzb24gfCBqcSAtciAnLiB8IGtleXNbXScgfCBoZWFkIC1uIDEpCiAgICAgICAgaWYgW1sgIiR7QVVUSF9LRVl9IiA9PSAiYXV0aHMiIF1dOyB0aGVuCiAgICAgICAgICAgIE5FRURTX0ZPUk1BVFRJTkc9ImZhbHNlIgogICAgICAgIGZpCiAgICBmaQoKICAgICMgTGVnYWN5IGt1YmVybmV0ZXMuaW8vZG9ja2VyY2ZnIHR5cGUgU2VjcmV0CiAgICBpZiBbWyAtZiAke1dPUktTUEFDRVNfQVVUSFNFQ1JFVF9QQVRIfS8uZG9ja2VyY2ZnIF1dOyB0aGVuCiAgICAgICAgcGhhc2UgIkRldGVjdGVkIC5kb2NrZXJjZmcgLi4uIgogICAgICAgICMgVGVzdCB0byBzZWUgaWYgaXQncyBhIHByb3BlciBhdXRoIGZpbGUKICAgICAgICBQVUxMX1NFQ1JFVF9QQVRIPSIke1dPUktTUEFDRVNfQVVUSFNFQ1JFVF9QQVRIfS8uZG9ja2VyY2ZnIgogICAgICAgIEFVVEhfS0VZPSQoY2F0ICR7V09SS1NQQUNFU19BVVRIU0VDUkVUX1BBVEh9Ly5kb2NrZXJjZmcgfCBqcSAtciAnLiB8IGtleXNbXScgfCBoZWFkIC1uIDEpCiAgICAgICAgaWYgW1sgIiR7QVVUSF9LRVl9IiA9PSAiYXV0aHMiIF1dOyB0aGVuCiAgICAgICAgICAgIE5FRURTX0ZPUk1BVFRJTkc9ImZhbHNlIgogICAgICAgIGZpCiAgICBmaQoKICAgICMgUHJlZm9ybWF0dGVkIE9wYXF1ZSB0eXBlIFNlY3JldAogICAgaWYgW1sgLWYgJHtXT1JLU1BBQ0VTX0FVVEhTRUNSRVRfUEFUSH0vYXV0aC5qc29uIF1dOyB0aGVuCiAgICAgICAgUFVMTF9TRUNSRVRfUEFUSD0iJHtXT1JLU1BBQ0VTX0FVVEhTRUNSRVRfUEFUSH0vYXV0aC5qc29uIgogICAgICAgIEFVVEhfS0VZPSQoY2F0ICR7V09SS1NQQUNFU19BVVRIU0VDUkVUX1BBVEh9L2F1dGguanNvbiB8IGpxIC1yICcuIHwga2V5c1tdJyB8IGhlYWQgLW4gMSkKICAgICAgICBpZiBbWyAiJHtBVVRIX0tFWX0iID09ICJhdXRocyIgXV07IHRoZW4KICAgICAgICAgICAgTkVFRFNfRk9STUFUVElORz0iZmFsc2UiCiAgICAgICAgZmkKICAgIGZpCgogICAgIyBBcHBseSBhbnkgbmVjZXNzYXJ5IGZvcm1hdHRpbmcKICAgIGlmIFtbICIke05FRURTX0ZPUk1BVFRJTkd9IiA9PSAidHJ1ZSIgXV07IHRoZW4KICAgICAgICBjYXQgPiAkSE9NRS8uY29uZmlnL2NvbnRhaW5lcnMvYXV0aC5qc29uIDw8RU9GCnsiYXV0aHMiOiAkKGNhdCAke1BVTExfU0VDUkVUX1BBVEh9KX0KRU9GCiAgICBlbHNlCiAgICAgICAgY3AgJHtQVUxMX1NFQ1JFVF9QQVRIfSAkSE9NRS8uY29uZmlnL2NvbnRhaW5lcnMvYXV0aC5qc29uCiAgICBmaQoKICAgICMgU2V0IGVudiB2YXJzCiAgICBBVVRIRklMRV9QQVJBTT0iLS1hdXRoZmlsZSAkSE9NRS8uY29uZmlnL2NvbnRhaW5lcnMvYXV0aC5qc29uIgogICAgUkVHSVNUUllfQVVUSF9GSUxFPSIkSE9NRS8uY29uZmlnL2NvbnRhaW5lcnMvYXV0aC5qc29uIgoKICAgIHBoYXNlICJBVVRIRklMRV9QQVJBTTogJyR7QVVUSEZJTEVfUEFSQU19JyIKICAgIHBoYXNlICJSRUdJU1RSWV9BVVRIX0ZJTEU6ICcke1JFR0lTVFJZX0FVVEhfRklMRX0nIgoKICAgICMgQXV0aCBpbmplY3Rpb24gaGFuZGxpbmcgc2luY2UgU2tvcGVvIGlzIGR1bWIgYW5kIGNhbid0IGRvIHJvb3QgZG9tYWluIGF1dGgKICAgIGlmIFsgLW4gIiR7UEFSQU1TX1NPVVJDRV9JTUFHRV9VUkx9IiBdICYmIFsgLW4gIiR7UEFSQU1TX0RFU1RJTkFUSU9OX0lNQUdFX1VSTH0iIF07IHRoZW4KICAgICAgICBERVNUX0RPTUFJTj0kKGVjaG8gJHtQQVJBTVNfREVTVElOQVRJT05fSU1BR0VfVVJMfSB8IHNlZCAtZSAnc3wuKjovL3x8JyAtZSAnc3wvLip8fCcpCiAgICAgICAgREVTVF9JTUFHRV9OT19UQUc9JChlY2hvICR7UEFSQU1TX0RFU1RJTkFUSU9OX0lNQUdFX1VSTH0gfCBzZWQgLWUgJ3N8Lio6Ly98fCcgLWUgJ3N8L3x8JyAtZSAnc3w6Lip8fCcgLWUgJ3N8QHNoYTI1Nnx8JykKICAgICAgICAjIENoZWNrIHRvIHNlZSBpZiB0aGVyZSBpcyBhIHJvb3QgZG9tYWluIGF1dGgKICAgICAgICBBVVRIX0RPTUFJTl9DSEVDSz0kKGpxIC1yICIuYXV0aHNbXCIke0RFU1RfRE9NQUlOfVwiXSIgJEhPTUUvLmNvbmZpZy9jb250YWluZXJzL2F1dGguanNvbikKICAgICAgICBpZiBbICIke0FVVEhfRE9NQUlOX0NIRUNLfSIgIT0gIm51bGwiIF07IHRoZW4KICAgICAgICAgICAgQVVUSF9ERVNUX0lNQUdFX0NIRUNLPSQoanEgLXIgIi5hdXRoc1tcIiR7REVTVF9JTUFHRV9OT19UQUd9XCJdIiAkSE9NRS8uY29uZmlnL2NvbnRhaW5lcnMvYXV0aC5qc29uKQogICAgICAgICAgICBpZiBbICIke0FVVEhfREVTVF9JTUFHRV9DSEVDS30iID09ICJudWxsIiBdOyB0aGVuCiAgICAgICAgICAgICAgICBqcSAiLmF1dGhzW1wiJHtERVNUX0lNQUdFX05PX1RBR31cIl0gPSAuYXV0aHNbXCIke0RFU1RfRE9NQUlOfVwiXSIgJEhPTUUvLmNvbmZpZy9jb250YWluZXJzL2F1dGguanNvbiA+ICRIT01FLy5jb25maWcvY29udGFpbmVycy9hdXRoLmpzb24udG1wCiAgICAgICAgICAgICAgICBtdiAkSE9NRS8uY29uZmlnL2NvbnRhaW5lcnMvYXV0aC5qc29uLnRtcCAkSE9NRS8uY29uZmlnL2NvbnRhaW5lcnMvYXV0aC5qc29uCiAgICAgICAgICAgIGZpCiAgICAgICAgZmkKICAgIGZpCmZpCgpleHBvcnQgWERHX1JVTlRJTUVfRElSPSIkSE9NRS8uY29uZmlnIgplY2hvICJYREdfUlVOVElNRV9ESVI6ICR7WERHX1JVTlRJTUVfRElSfSI=" |base64 -d >"/scripts/skopeo-disconnected-config.sh"
        printf '%s' "IyEvdXNyL2Jpbi9lbnYgYmFzaAoKZGVjbGFyZSAtcnggUEFSQU1TX1NPVVJDRV9JTUFHRV9VUkw9IiR7UEFSQU1TX1NPVVJDRV9JTUFHRV9VUkw6LX0iCmRlY2xhcmUgLXJ4IFBBUkFNU19ERVNUSU5BVElPTl9JTUFHRV9VUkw9IiR7UEFSQU1TX0RFU1RJTkFUSU9OX0lNQUdFX1VSTDotfSIKZGVjbGFyZSAtcnggUEFSQU1TX1NSQ19UTFNfVkVSSUZZPSIke1BBUkFNU19TUkNfVExTX1ZFUklGWTotfSIKZGVjbGFyZSAtcnggUEFSQU1TX0RFU1RfVExTX1ZFUklGWT0iJHtQQVJBTVNfREVTVF9UTFNfVkVSSUZZOi19IgpkZWNsYXJlIC1yeCBQQVJBTVNfVkVSQk9TRT0iJHtQQVJBTVNfVkVSQk9TRTotfSIKZGVjbGFyZSAtcnggUEFSQU1TX0FSR1M9IiR7UEFSQU1TX0FSR1M6LX0iCgpkZWNsYXJlIC1yeCBXT1JLU1BBQ0VTX0lNQUdFU19VUkxfUEFUSD0iJHtXT1JLU1BBQ0VTX0lNQUdFU19VUkxfUEFUSDotfSIKZGVjbGFyZSAtcnggV09SS1NQQUNFU19JTUFHRVNfVVJMX0JPVU5EPSIke1dPUktTUEFDRVNfSU1BR0VTX1VSTF9CT1VORDotfSIKCmRlY2xhcmUgLXJ4IFJFU1VMVFNfU09VUkNFX0RJR0VTVF9QQVRIPSIke1JFU1VMVFNfU09VUkNFX0RJR0VTVF9QQVRIOi19IgpkZWNsYXJlIC1yeCBSRVNVTFRTX0RFU1RJTkFUSU9OX0RJR0VTVF9QQVRIPSIke1JFU1VMVFNfREVTVElOQVRJT05fRElHRVNUX1BBVEg6LX0iCgojCiMgQXNzZXJ0aW5nIEVudmlyb25tZW50CiMKCmV4cG9ydGVkX29yX2ZhaWwgXAogICAgUkVTVUxUU19TT1VSQ0VfRElHRVNUX1BBVEggXAogICAgUkVTVUxUU19ERVNUSU5BVElPTl9ESUdFU1RfUEFUSAoKCiMKIyBTa29wZW8gQXV0aGVudGljYXRpb24KIwoKZGVjbGFyZSAteCBSRUdJU1RSWV9BVVRIX0ZJTEU9IiIKCmRvY2tlcl9jb25maWc9Ii93b3Jrc3BhY2UvaG9tZS8uZG9ja2VyL2NvbmZpZy5qc29uIgppZiBbWyAtZiAiJHtkb2NrZXJfY29uZmlnfSIgXV07IHRoZW4KICAgIHBoYXNlICJTZXR0aW5nIFJFR0lTVFJZX0FVVEhfRklMRSB0byAnJHtkb2NrZXJfY29uZmlnfSciCiAgICBSRUdJU1RSWV9BVVRIX0ZJTEU9JHtkb2NrZXJfY29uZmlnfQpmaQoKIwojIFZlcmJvc2UgT3V0cHV0CiMKCmRlY2xhcmUgLXggU0tPUEVPX0RFQlVHX0ZMQUc9IiIKCmlmIFtbICIke1BBUkFNU19WRVJCT1NFfSIgPT0gInRydWUiIF1dOyB0aGVuCiAgICBTS09QRU9fREVCVUdfRkxBRz0iLS1kZWJ1ZyIKICAgIHNldCAteApmaQo=" |base64 -d >"/scripts/skopeo-common.sh"
        printf '%s' "IyEvdXNyL2Jpbi9lbnYgYmFzaAoKc2hvcHQgLXMgaW5oZXJpdF9lcnJleGl0CnNldCAtZXUgLW8gcGlwZWZhaWwKCnNvdXJjZSAiJChkaXJuYW1lICIke0JBU0hfU09VUkNFWzBdfSIpL2NvbW1vbi5zaCIKc291cmNlICIkKGRpcm5hbWUgIiR7QkFTSF9TT1VSQ0VbMF19Iikvc2tvcGVvLWNvbW1vbi5zaCIKc291cmNlICIkKGRpcm5hbWUgIiR7QkFTSF9TT1VSQ0VbMF19Iikvc2tvcGVvLWRpc2Nvbm5lY3RlZC1jb25maWcuc2giCgojIEVuc3VyZSB0aGUgL3Rla3Rvbi9ob21lLy5kb2NrZXIgZGlyZWN0b3J5IGV4aXN0cwpta2RpciAtcCAvd29ya3NwYWNlL2hvbWUvLmRvY2tlcgoKc2V0IC14CgppZiBbIC1uICIke1BBUkFNU19TT1VSQ0VfSU1BR0VfVVJMfSIgXSAmJiBbIC1uICIke1BBUkFNU19ERVNUSU5BVElPTl9JTUFHRV9VUkx9IiBdOyB0aGVuCiAgICBwaGFzZSAiQ29weWluZyAnJHtQQVJBTVNfU09VUkNFX0lNQUdFX1VSTH0nIGludG8gJyR7UEFSQU1TX0RFU1RJTkFUSU9OX0lNQUdFX1VSTH0nIgogICAgc2tvcGVvIGNvcHkgJHtTS09QRU9fREVCVUdfRkxBR30gJHtTS09QRU9fUkVHSVNUUklFU0RfRkxBR30gJHtBVVRIRklMRV9QQVJBTX0gXAogICAgICAgIC0tc3JjLXRscy12ZXJpZnk9IiR7UEFSQU1TX1NSQ19UTFNfVkVSSUZZfSIgXAogICAgICAgIC0tZGVzdC10bHMtdmVyaWZ5PSIke1BBUkFNU19ERVNUX1RMU19WRVJJRll9IiBcCiAgICAgICAgJHtQQVJBTVNfQVJHUzorJHtQQVJBTVNfQVJHU319IFwKICAgICAgICAiJHtQQVJBTVNfU09VUkNFX0lNQUdFX1VSTH0iIFwKICAgICAgICAiJHtQQVJBTVNfREVTVElOQVRJT05fSU1BR0VfVVJMfSIKZWxpZiBbICIke1dPUktTUEFDRVNfSU1BR0VTX1VSTF9CT1VORH0iID09ICJ0cnVlIiBdOyB0aGVuCiAgICBwaGFzZSAiQ29weWluZyB1c2luZyB1cmwudHh0IGZpbGUiCiAgICAjIEZ1bmN0aW9uIHRvIGNvcHkgbXVsdGlwbGUgaW1hZ2VzLgogICAgY29weWltYWdlcygpIHsKICAgICAgICBmaWxlbmFtZT0iJHtXT1JLU1BBQ0VTX0lNQUdFU19VUkxfUEFUSH0vdXJsLnR4dCIKICAgICAgICBbWyAhIC1mICIke2ZpbGVuYW1lfSIgXV0gJiYgZmFpbCAidXJsLnR4dCBmaWxlIG5vdCBmb3VuZCBhdDogJyR7ZmlsZW5hbWV9JyIKICAgICAgICB3aGlsZSBJRlM9IHJlYWQgLXIgbGluZSB8fCBbIC1uICIkbGluZSIgXQogICAgICAgIGRvCiAgICAgICAgICAgIHJlYWQgLXJhIFNPVVJDRSA8PDwiJHtsaW5lfSIKICAgICAgICAgICAgc2tvcGVvIGNvcHkgIiR7U09VUkNFW0BdfSIgJHtTS09QRU9fREVCVUdfRkxBR30gJHtTS09QRU9fUkVHSVNUUklFU0RfRkxBR30gJHtBVVRIRklMRV9QQVJBTX0gLS1zcmMtdGxzLXZlcmlmeT0iJHtQQVJBTVNfU1JDX1RMU19WRVJJRll9IiAtLWRlc3QtdGxzLXZlcmlmeT0iJHtQQVJBTVNfREVTVF9UTFNfVkVSSUZZfSIgJHtQQVJBTVNfQVJHUzorJHtQQVJBTVNfQVJHU319CiAgICAgICAgICAgIGVjaG8gIiRsaW5lIgogICAgICAgIGRvbmUgPCAiJGZpbGVuYW1lIgogICAgfQoKICAgIGNvcHlpbWFnZXMKZWxzZQogIGZhaWwgIk5laXRoZXIgU291cmNlL0Rlc3RpbmF0aW9uIGltYWdlIFVSTCBwYXJhbWV0ZXJzIG5vciB3b3Jrc3BhY2UgaW1hZ2VzX3VybCBwcm92aWRlZCIKZmkK" |base64 -d >"/scripts/skopeo-copy.sh"
        printf '%s' "IyEvdXNyL2Jpbi9lbnYgYmFzaAoKc2hvcHQgLXMgaW5oZXJpdF9lcnJleGl0CnNldCAtZXUgLW8gcGlwZWZhaWwKCnNvdXJjZSAiJChkaXJuYW1lICR7QkFTSF9TT1VSQ0VbMF19KS9jb21tb24uc2giCnNvdXJjZSAiJChkaXJuYW1lICR7QkFTSF9TT1VSQ0VbMF19KS9za29wZW8tY29tbW9uLnNoIgoKZnVuY3Rpb24gc2tvcGVvX2luc3BlY3QoKSB7CiAgICBsb2NhbCBpbWFnZT0iJDEiCiAgICBsb2NhbCB0bHNfdmVyaWZ5PSIkMiIKICAgIHNrb3BlbyBpbnNwZWN0ICR7U0tPUEVPX0RFQlVHX0ZMQUd9IFwKICAgICAgICAtLXRscy12ZXJpZnk9IiR7dGxzX3ZlcmlmeX0iIFwKICAgICAgICAtLWZvcm1hdD0ne3sgLkRpZ2VzdCB9fScgXAogICAgICAgICIke2ltYWdlfSIKfQoKaWYgWyAtbiAiJHtQQVJBTVNfU09VUkNFX0lNQUdFX1VSTH0iIF0gJiYgWyAtbiAiJHtQQVJBTVNfREVTVElOQVRJT05fSU1BR0VfVVJMfSIgXTsgdGhlbgogICAgcGhhc2UgIkV4dHJhY3RpbmcgJyR7UEFSQU1TX1NPVVJDRV9JTUFHRV9VUkx9JyBzb3VyY2UgaW1hZ2UgZGlnZXN0IgogICAgc291cmNlX2RpZ2VzdD0iJChza29wZW9faW5zcGVjdCAiJHtQQVJBTVNfU09VUkNFX0lNQUdFX1VSTH0iICIke1BBUkFNU19TUkNfVExTX1ZFUklGWX0iKSIKICAgIHBoYXNlICJTb3VyY2UgaW1hZ2UgZGlnZXN0ICcke3NvdXJjZV9kaWdlc3R9JyIKCiAgICBwaGFzZSAiRXh0cmFjdGluZyAnJHtQQVJBTVNfREVTVElOQVRJT05fSU1BR0VfVVJMfScgZGVzdGluYXRpb24gaW1hZ2UgZGlnZXN0IgogICAgZGVzdGluYXRpb25fZGlnZXN0PSIkKHNrb3Blb19pbnNwZWN0ICIke1BBUkFNU19ERVNUSU5BVElPTl9JTUFHRV9VUkx9IiAiJHtQQVJBTVNfREVTVF9UTFNfVkVSSUZZfSIpIgogICAgcGhhc2UgIkRlc3RpbmF0aW9uIGltYWdlIGRpZ2VzdCAnJHtkZXN0aW5hdGlvbl9kaWdlc3R9JyIKZWxzZQogICAgcGhhc2UgIkV4dHJhY3Rpbmcgc291cmNlIGFuZCBkZXN0aW5hdGlvbiBpbWFnZSBkaWdlc3RzIGZvciBpbWFnZXMgZnJvbSB1cmwudHh0IGZpbGUiCiAgICBmaWxlbmFtZT0iJHtXT1JLU1BBQ0VTX0lNQUdFU19VUkxfUEFUSH0vdXJsLnR4dCIKICAgIHNvdXJjZV9kaWdlc3Q9IiIKICAgIGRlc3RpbmF0aW9uX2RpZ2VzdD0iIgogICAgd2hpbGUgSUZTPSByZWFkIC1yIGxpbmUgfHwgWyAtbiAiJGxpbmUiIF0KICAgIGRvCiAgICAgICAgcmVhZCAtcmEgU09VUkNFIDw8PCIke2xpbmV9IgogICAgICAgIHNvdXJjZV9kaWdlc3Q9IiRzb3VyY2VfZGlnZXN0ICQoc2tvcGVvX2luc3BlY3QgJHtTT1VSQ0VbMF19ICR7UEFSQU1TX1NSQ19UTFNfVkVSSUZZfSkiCiAgICAgICAgZGVzdGluYXRpb25fZGlnZXN0PSIkZGVzdGluYXRpb25fZGlnZXN0ICQoc2tvcGVvX2luc3BlY3QgJHtTT1VSQ0VbMV19ICR7UEFSQU1TX0RFU1RfVExTX1ZFUklGWX0pIgogICAgZG9uZSA8ICIkZmlsZW5hbWUiCiAgICAjIFJlbW92ZSB3aGl0ZXNwYWNlIGZyb20gdGhlIHN0YXJ0CiAgICBzb3VyY2VfZGlnZXN0PSIke3NvdXJjZV9kaWdlc3QjIH0iCiAgICBkZXN0aW5hdGlvbl9kaWdlc3Q9IiR7ZGVzdGluYXRpb25fZGlnZXN0IyB9IgogICAgcGhhc2UgIlNvdXJjZSBpbWFnZSBkaWdlc3RzICcke3NvdXJjZV9kaWdlc3R9JyIKICAgIHBoYXNlICJEZXN0aW5hdGlvbiBpbWFnZSBkaWdlc3RzICcke2Rlc3RpbmF0aW9uX2RpZ2VzdH0nIgpmaQoKcHJpbnRmICIlcyIgIiR7c291cmNlX2RpZ2VzdH0iID4gIiR7UkVTVUxUU19TT1VSQ0VfRElHRVNUX1BBVEh9IgpwcmludGYgIiVzIiAiJHtkZXN0aW5hdGlvbl9kaWdlc3R9IiA+ICIke1JFU1VMVFNfREVTVElOQVRJT05fRElHRVNUX1BBVEh9Igo=" |base64 -d >"/scripts/skopeo-results.sh"
        ls /scripts/*.sh;
        chmod +x /scripts/*.sh;
        echo "Running Script /scripts/skopeo-copy.sh";
        /scripts/skopeo-copy.sh;
        echo "Running Script /scripts/skopeo-results.sh";
        /scripts/skopeo-results.sh;
      volumeMounts:
        - mountPath: /scripts
          name: scripts-dir
  volumes:
    - emptyDir: {}
      name: scripts-dir
  workspaces:
    - description: |
        For storing image urls in case of more than one image to copy. It must have a url.txt file at the root path
        containing a source and a destination image separated by a space on each line.
      name: images_url
      optional: true
    - description: An optional workspace that allows providing overrides for how Buildah accesses container registries.
      mountPath: /tmp/containerconfig
      name: containerconfig
      optional: true
    - description: An optional workspace that allows providing overrides in registries.d
      mountPath: /tmp/registries.d
      name: registriesd
      optional: true
    - description: Mount a Secret for Pull/Push Credentials
      mountPath: /tmp/authsecret
      name: authsecret
      optional: true
    - description: An optional workspace to mount CA Root certs from a ConfigMap with the key `ca-bundle.crt`
      mountPath: /etc/pki/tls/certs
      name: root-ca-certs
      optional: true
