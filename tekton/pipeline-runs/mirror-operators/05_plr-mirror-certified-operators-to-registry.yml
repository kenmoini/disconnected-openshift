---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  generateName: mirror-certified-operators-to-registry-
  labels:
    tekton.dev/pipeline: mirror-operators-to-registry
spec:
  params:
    - name: DRY_RUN
      value: "false"
    - name: MIRROR_METHOD
      value: 'direct'
    - name: MIRROR_ENGINE
      value: 'operators'

    - name: SOURCE_OPERATOR_INDEX
      value: registry.redhat.io/redhat/certified-operator-index:v4.17
    - name: TARGET_OPERATOR_INDEX
      value: "man-mirror.jfrog.lab.kemo.network/operators/certified-operators"

    - name: OPERATOR_LIST
      value: "gpu-operator-certified trident-operator portworx-certified"

    - name: EXTRA_OC_ARGS
      value: '--retry-times 10 --retry-delay 5s'

    - name: AUTH_FILE
      value: "/tmp/authsecret/auth.json"
    - name: HTTP_PROXY
      value: "http://proxy.kemo.labs:3129"
    - name: HTTPS_PROXY
      value: "http://proxy.kemo.labs:3129"
    - name: NO_PROXY
      value: ".kemo.labs,.kemo.network,.local,.svc,localhost,127.0.0.1,192.168.0.0/16,172.16.0.0/12,10.0.0.0/8"

  pipelineRef:
    name: mirror-operators-to-registry
  taskRunTemplate:
    serviceAccountName: pipeline
  timeouts:
    pipeline: 1h30m0s
  workspaces:

    - name: savepath
      persistentVolumeClaim:
        claimName: operator-mirror

    - name: authsecret
      secret:
        items:
          - key: .dockerconfigjson
            path: auth.json
        secretName: combined-reg-secret

# Optional in case you're pulling from a private repository and/or need to use a proxy
    - configMap:
        items:
          - key: registries.conf
            path: registries.conf
        name: mirror-registry-config
      name: containerconfig
    - configMap:
        items:
          - key: ca-bundle.crt
            path: ca-bundle.crt
        name: root-ca-certs
      name: root-ca-certs